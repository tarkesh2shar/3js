!function(e){function t(t){for(var r,i,u=t[0],l=t[1],c=t[2],f=0,s=[];f<u.length;f++)i=u[f],Object.prototype.hasOwnProperty.call(a,i)&&a[i]&&s.push(a[i][0]),a[i]=0;for(r in l)Object.prototype.hasOwnProperty.call(l,r)&&(e[r]=l[r]);for(d&&d(t);s.length;)s.shift()();return o.push.apply(o,c||[]),n()}function n(){for(var e,t=0;t<o.length;t++){for(var n=o[t],r=!0,u=1;u<n.length;u++){var l=n[u];0!==a[l]&&(r=!1)}r&&(o.splice(t--,1),e=i(i.s=n[0]))}return e}var r={},a={0:0},o=[];function i(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=e,i.c=r,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)i.d(n,r,function(t){return e[t]}.bind(null,r));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="";var u=window.webpackJsonp=window.webpackJsonp||[],l=u.push.bind(u);u.push=t,u=u.slice();for(var c=0;c<u.length;c++)t(u[c]);var d=l;o.push([139,2,5,1,8,4,3,6,7]),n()}({132:function(e,t,n){e.exports=n.p+"86395b284f131002c09c9a6d32bfde1b.jpg"},133:function(e,t,n){e.exports=n.p+"b884a87b665154e14ba7a06f393fcb46.jpg"},134:function(e,t,n){e.exports=n.p+"86395b284f131002c09c9a6d32bfde1b.jpg"},135:function(e,t,n){e.exports=n.p+"4bd3f98c2d44c45145ddd31f463eab8b.jpg"},136:function(e,t,n){e.exports=n.p+"7eddcb9a916b1684ba1694dfe5fef212.jpg"},137:function(e,t,n){e.exports=n.p+"763dca84a8d87ddfcc15753a8b655275.jpg"},139:function(e,t,n){n(140),e.exports=n(342)},342:function(e,t,n){"use strict";var r=i(n(52)),a=i(n(344)),o=(i(n(348)),i(n(349)));function i(e){return e&&e.__esModule?e:{default:e}}n(351),a.default.render(r.default.createElement(o.default,null),document.querySelector("#root"))},348:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],r=!0,a=!1,o=void 0;try{for(var i,u=e[Symbol.iterator]();!(r=(i=u.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){a=!0,o=e}finally{try{!r&&u.return&&u.return()}finally{if(a)throw o}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")};t.default=function(){var e,t,n,p,m,h=!1,v=0,y=0,w=0,b=0,g=[u.default,l.default,c.default,d.default,f.default],M=(0,a.useState)(i.default),x=r(M,2),_=x[0];x[1];return(0,a.useEffect)(function(){p=document.querySelector(".container"),(e=new s.PerspectiveCamera(75,window.innerWidth/window.innerHeight,1,1100)).target=new s.Vector3(0,0,0),t=new s.Scene;var r=new s.SphereBufferGeometry(500,60,40);r.scale(-1,1,1);var a=(new s.TextureLoader).load(_),o=new s.MeshBasicMaterial({map:a});m=new s.Mesh(r,o),t.add(m),(n=new s.WebGLRenderer).setPixelRatio(window.devicePixelRatio),n.setSize(window.innerWidth,window.innerHeight),p.appendChild(n.domElement),function r(){requestAnimationFrame(r),!1===h&&(v+=.1),y=Math.max(-85,Math.min(85,y)),w=s.Math.degToRad(90-y),b=s.Math.degToRad(v),e.target.x=500*Math.sin(w)*Math.cos(b),e.target.y=500*Math.cos(w),e.target.z=500*Math.sin(w)*Math.sin(b),e.lookAt(e.target),n.render(t,e)}()},[_]),o.default.createElement("div",{className:"container",onLoad:function(e){}},o.default.createElement("div",{className:"sampleGallery"},function(){return g.map(function(e){return o.default.createElement("div",{className:"minibox",key:e,onClick:function(t){console.log("clickedItem",e)}},o.default.createElement("img",{src:e}))})}()))};var a=n(52),o=p(a),i=p(n(132)),u=p(n(133)),l=p(n(134)),c=p(n(135)),d=p(n(136)),f=p(n(137)),s=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(138));function p(e){return e&&e.__esModule?e:{default:e}}},349:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],r=!0,a=!1,o=void 0;try{for(var i,u=e[Symbol.iterator]();!(r=(i=u.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){a=!0,o=e}finally{try{!r&&u.return&&u.return()}finally{if(a)throw o}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")};t.default=function(){var e=[l.default,c.default,d.default,f.default,s.default],t=(0,a.useState)(u.default),n=r(t,2),p=n[0],m=n[1];return o.default.createElement("div",null,o.default.createElement(i.default,{image:p}),o.default.createElement("div",{className:"sampleGallery"},e.map(function(e){return o.default.createElement("div",{className:"minibox",key:e,onClick:function(t){m(e),console.log("clickedItem",e)}},o.default.createElement("img",{src:e}))})))};var a=n(52),o=p(a),i=p(n(350)),u=p(n(132)),l=p(n(133)),c=p(n(134)),d=p(n(135)),f=p(n(136)),s=p(n(137));function p(e){return e&&e.__esModule?e:{default:e}}},350:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t,n,r,u,l,c=e.image,d=!1,f=0,s=0,p=0,m=0;return(0,a.useEffect)(function(){u=document.querySelector(".container"),(t=new i.PerspectiveCamera(75,window.innerWidth/window.innerHeight,1,1100)).target=new i.Vector3(0,0,0),n=new i.Scene;var e=new i.SphereBufferGeometry(500,60,40);e.scale(-1,1,1);var a=(new i.TextureLoader).load(c),o=new i.MeshBasicMaterial({map:a});return l=new i.Mesh(e,o),n.add(l),(r=new i.WebGLRenderer).setPixelRatio(window.devicePixelRatio),r.setSize(window.innerWidth,window.innerHeight),u.appendChild(r.domElement),function e(){requestAnimationFrame(e),!1===d&&(f+=.1),s=Math.max(-85,Math.min(85,s)),p=i.Math.degToRad(90-s),m=i.Math.degToRad(f),t.target.x=500*Math.sin(p)*Math.cos(m),t.target.y=500*Math.cos(p),t.target.z=500*Math.sin(p)*Math.sin(m),t.lookAt(t.target),r.render(n,t)}(),function(){(u=document.querySelector(".container")).innerHTML=""}},[c]),o.default.createElement("div",{className:"container",onLoad:function(e){}})};var r,a=n(52),o=(r=a)&&r.__esModule?r:{default:r},i=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(138))}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=main.ea550b2ff1fca92b7684.js.map